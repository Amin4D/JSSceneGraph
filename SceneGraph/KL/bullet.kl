//
// Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
//

use Vec3;
use Xfo;
use BulletShape;
use BulletRigidBody;
use BulletWorld;

operator createBulletWorld(
  io BulletWorld world
){
  Boolean result;
  world.create(result);  
}

operator stepBulletWorld(
  io BulletWorld world,
  io Scalar prevTime,
  io Scalar time,
){
  Scalar steppedTime = time - prevTime;
  if(time == 0.0 && prevTime > 0.0) {
    world.reset();
    prevTime = 0.0;
  } else {
    world.step(steppedTime);
    prevTime = time - steppedTime;
  }
}

operator createBulletShape(
  io BulletShape shape
){
  Boolean result;
  shape.create(result);
}

operator createBulletRigidBody(
  io BulletWorld world,
  io BulletShape shape,
  io BulletRigidBody body
){
  Boolean result;
  body.create(shape,result);
  if(result) {
    world.addRigidBody(body);  
  }
}

operator getBulletRigidBodyTransform(
  io BulletRigidBody body,
  io Xfo transform
){
  body.getTransform(transform);
}

