//
// Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
//

use Mat44;
use Xfo;
use Bone;

operator calcInverseBindPose(io Bone bones[], io Mat44 invGlobalMat44[]) {
  report('calcInverseBindPose\n');
  invGlobalMat44.resize(bones.size());
  for (Integer i = 0; i < bones.size(); i++) {
    Mat44 globalMat44 = bones[i].referencePose.toMat44();
    invGlobalMat44[i] = globalMat44.inverse();
  }
}

operator calcReferencePoseFromInverseBindPose(io Bone bones[], io Mat44 invGlobalMat44[]) {
  report('calcReferencePoseFromInverseBindPose bones.size():' + bones.size() + ' invGlobalMat44.size():' + invGlobalMat44.size());
  if (bones.size() == invGlobalMat44.size()) {
    for (Integer i = 0; i < bones.size(); i++) {
      bones[i].referencePose = Xfo(invGlobalMat44[i]).inv();
    }
  }
}

operator calcReferenceLocalPose(io Bone bones[]) {
  report('calcReferenceLocalPose');
  for (Integer i = 0; i < bones.size(); i++) {
    if (bones[i].parent == - 1) {
      bones[i].referenceLocalPose = bones[i].referencePose;
    }
    else {
      // Our Math library has some fundamental bugs in it, and I'm working around them here.
      bones[i].referenceLocalPose = bones[bones[i].parent].referencePose.inverse() * bones[i].referencePose;
      
      //  report( bones[i].referenceLocalPose );
      //    Mat44 parentGlobal = bones[bones[i].parent].referencePose;
      //    Mat44 thisGlobal = bones[i].referencePose;
      //    Mat44 thisLocal = thisGlobal * parentGlobal.inverse();
      //    bones[i].referenceLocalPose = Xfo( thisLocal );

    //  bones[i].referenceLocalPose = bones[bones[i].parent].referencePose.invProject(bones[i].referencePose);

      //report( bones[i].referenceLocalPose );
    }
  }
}

operator calcReferenceGlobalPose(io Bone bones[]) {
  report('calcReferenceGlobalPose:' + bones.size());
  for (Integer i = 0; i < bones.size(); i++) {
    if (bones[i].parent == - 1) {
      bones[i].referencePose = bones[i].referenceLocalPose;
    }
    else {
      // Our Math library has some fundamental bugs in it, and I'm working around them here.
      //  bones[i].referenceLocalPose = bones[bones[i].parent].referencePose.inv() * bones[i].referencePose;
      //  bones[i].referenceLocalPose = bones[i].referencePose * bones[bones[i].parent].referencePose.inv();
      //  report( bones[i].referenceLocalPose );
      Mat44 parentGlobal = bones[bones[i].parent].referencePose;
      Mat44 thisLocal = bones[i].referenceLocalPose;
      Mat44 thisGlobal = parentGlobal * thisLocal;
      bones[i].referencePose = Xfo(thisGlobal);

      //  report( bones[i].referencePose );
    }
  }
}