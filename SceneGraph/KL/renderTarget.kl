//
// Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
//

#include 'FABRIC_ROOT/SceneGraph/KL/drawTexture.kl'

use OGLRenderTarget;
use OGLShaderProgram;
use OGLTexture2D;
use FabricOGL;

operator bindRenderTarget(
  io OGLRenderTarget renderTarget
) {
//  report("bindRenderTarget");
  renderTarget.bind();
}

operator bindScreenRenderTarget(
  io Integer width,
  io Integer height,
  io OGLRenderTarget renderTarget
) {
//  report("bindScreenRenderTarget");
  renderTarget.prebind(width, height);
  renderTarget.bind();
}

operator unbindRenderTarget(
  io OGLRenderTarget renderTarget
) {
//  report("unbindRenderTarget");
  renderTarget.unbind();
}


operator drawRenderTargetToView(
  io OGLRenderTarget renderTarget,
  io OGLShaderProgram shaderProgram
) {
//  report("drawRenderTargetToView>>>");

  OGLTexture2D colorTexture;// = depthRenderTarget.getFirstColorTexture();
  for(Integer i=0; i<renderTarget.textures.size(); i++){
    if(renderTarget.textures[i].type == 2){//this.COLOR_BUFFER
      colorTexture = renderTarget.textures[i].texture;
    }
  }
  if(colorTexture.bufferID > 0 ){
    Integer textureUnit = 0;
    glActiveTexture(GL_TEXTURE0);
    glBindTexture(GL_TEXTURE_2D, colorTexture.bufferID);
    
    Vec2 tl(-1.0, 1.0);
    Vec2 br(1.0, -1.0);
    drawTexture(textureUnit, shaderProgram.programId, tl, br, false);
  }else{
    report("Error: no color textures found");
  }

 // report("<<<drawRenderTargetToView");
}

