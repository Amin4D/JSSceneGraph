
//
// Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
//

function Mat22(
  Scalar _00, Scalar _01,
  Scalar _10, Scalar _11
) {
  this.row0 = Vec2(_00, _01);
  this.row1 = Vec2(_10, _11);
}

function Mat22(
  Vec2 row0, Vec2 row1
) {
  this.row0 = row0;
  this.row1 = row1;
}

function Mat22.setNull() {
  var Vec2 null(0.0, 0.0);
  this.row0 = this.row1 = null;
}

function Mat22.setDiagonal(in Scalar v) {
  this.row0.x = this.row1.y = v;
}

function Mat22.setDiagonal(in Vec2 v) {
  this.row0.x = v.x;
  this.row1.y = v.y;
}

function Vec2 * (Vec2 vec2, Mat22 mat22) {
  return Vec2(
    vec2.x * mat22.row0.x + vec2.y * mat22.row1.x,
    vec2.x * mat22.row0.y + vec2.y * mat22.row1.y
  );
}

function Vec2 * (Mat22 mat22, Vec2 vec2) {
  return Vec2(
    mat22.row0.x * vec2.x + mat22.row0.y * vec2.y,
    mat22.row1.x * vec2.x + mat22.row1.y * vec2.y
  );
}

function Mat22 * (Mat22 left, Mat22 right) {
  var Mat22 result;

  result.row0.x = left.row0.x * right.row0.x + left.row0.y;
  result.row0.y = left.row0.x * right.row0.y + left.row0.y;

  result.row1.x = left.row1.x * right.row0.x + left.row1.y;
  result.row1.y = left.row1.x * right.row0.y + left.row1.y;

  return result;
}
function Mat22 / (Mat22 mat, Scalar value) {
  var Mat22 result;
  result.row0 = mat.row0 / value;
  result.row1 = mat.row1 / value;
  return result;
}

function Mat22 Mat22.transpose() {
  var Mat22 result;

  result.row0.x = this.row0.x;
  result.row0.y = this.row1.x;
  result.row1.x = this.row0.y;
  result.row1.y = this.row1.y;

  return result;
}
