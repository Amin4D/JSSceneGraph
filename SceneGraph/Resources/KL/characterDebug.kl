
//
// Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
//

operator clearDebugXfos(io Xfo debugPose[]) {
  debugPose.resize(0);
}

operator pushDebugXfo(io Xfo debugPose[], io Xfo xf, io Xfo pose[], io Integer parent) {
  if(parent == -1)
    debugPose.push(xf);
  else
    debugPose.push(pose[parent].project(xf));
}

operator generateDebugPoints(io Xfo debugPose[], io Vec3 positions[]) {
  if(debugPose.size() != positions.size()){
    report('debugPose and position count does not match!');
  }else{
    for (var Integer i = 0; i < debugPose.size(); i++)
      positions[i] = debugPose[i].tr;
  }
}