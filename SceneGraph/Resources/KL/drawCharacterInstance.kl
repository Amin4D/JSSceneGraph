
//
// Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
//



operator drawCharacterInstance(
  io OGLShaderProgram shaderProgram,
  io Mat44 boneMatrices[],
  io Mat44 cameraMatrix,
  io Mat44 projectionMatrix,
  io Integer indicesBufferID,
  io Size indicesCount
) {
//  report("drawCharacterInstance");
  Integer location;
  /*
  location = shaderProgram.getUniformLocation(BONE_MATRICIES_ATTRIBUTE_ID);
  if(location!=-1){
    shaderProgram.loadMat44UniformArray(location, boneMatrices);
  }

  Data NULL;
  glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, indicesBufferID);
  glDrawElements(GL_TRIANGLES, indicesCount, GL_UNSIGNED_INT, NULL);
  glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);
  */
}