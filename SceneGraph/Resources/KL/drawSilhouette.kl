operator drawSilhouette(
  io Boolean enabled,
  io Mat44 globalMat,
  io Mat44 cameraMat,
  io Mat44 projMat,
  io Integer positionsBufferID,
  io Integer indices[],
  io Integer indexBufferID,
  io Scalar thickness,
  io Color color
) {
  if (enabled) {
    var Data NULL;

    glUseProgram(0);

    glPushAttrib(GL_COLOR_BUFFER_BIT | GL_POLYGON_BIT | GL_LINE_BIT | GL_DEPTH_BUFFER_BIT);
    glEnable(GL_BLEND);
    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
    glPolygonMode(GL_BACK, GL_LINE);
    glLineWidth(thickness * 2.0);
    glCullFace(GL_FRONT);
    glDepthFunc(GL_LEQUAL);
    glColor3f(color.r, color.g, color.b);

    glEnableClientState(GL_VERTEX_ARRAY);
    glBindBuffer(GL_ARRAY_BUFFER, positionsBufferID);
    glVertexPointer(3, GL_FLOAT, 0, NULL);
    glBindBuffer(GL_ARRAY_BUFFER, 0);

    glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, indexBufferID);
    glDrawElements(GL_TRIANGLES, indices.size(), GL_UNSIGNED_INT, NULL);
    glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);

    glPolygonMode(GL_BACK, GL_POLYGON);

    glPopAttrib();
  }
}