
//
// Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
//

function decodeLDRImageData(
  io FabricResource resource,
  io Size imageWidth,
  io Size imageHeight,
  io RGBA imageLDR[]
) {
  if(resource.dataSize == 0)
    return;
  String ext = resource.extension ? resource.extension : resource.mimeType;
  switch (ext) {
    case'png':
    case'image/png':
      FabricPNGDecode(resource.data, resource.dataSize, imageWidth, imageHeight, imageLDR);
      break;
    case'tga':
    case'image/tga':
      FabricTGADecode(resource.data, resource.dataSize, imageWidth, imageHeight, imageLDR);
      break;
  }
}

operator bindCubeMap(
  io FabricResource resource1,
  io FabricResource resource2,
  io FabricResource resource3,
  io FabricResource resource4,
  io FabricResource resource5,
  io FabricResource resource6,
  io OGLTextureCube cubeMap,
  io Integer textureUnit
){
  if(oglTexture2D.bufferID == 0){
    Size width, height;
    RGBA imageLDR[];
    if(resource1.dataSize != 0){
      decodeLDRImageData(resource1, width, height, imageLDR);
      cubeMap.storeData(imageLDR, 0);
      resource1.data = NULL;
      resource1.dataSize = 0;
    }
    if(resource2.dataSize != 0){
      decodeLDRImageData(resource2, width, height, imageLDR);
      cubeMap.storeData(imageLDR, 1);
      resource2.data = NULL;
      resource2.dataSize = 0;
    }
    if(resource3.dataSize != 0){
      decodeLDRImageData(resource3, width, height, imageLDR);
      cubeMap.storeData(imageLDR, 2);
      resource3.data = NULL;
      resource3.dataSize = 0;
    }
    if(resource4.dataSize != 0){
      decodeLDRImageData(resource4, width, height, imageLDR);
      cubeMap.storeData(imageLDR, 3);
      resource4.data = NULL;
      resource4.dataSize = 0;
    }
    if(resource5.dataSize != 0){
      decodeLDRImageData(resource5, width, height, imageLDR);
      cubeMap.storeData(imageLDR, 4);
      resource5.data = NULL;
      resource5.dataSize = 0;
    }
    if(resource6.dataSize != 0){
      decodeLDRImageData(resource6, width, height, imageLDR);
      cubeMap.storeData(imageLDR, 5);
      resource6.data = NULL;
      resource6.dataSize = 0;
    }
    cubeMap.configure(textureUnit);
    cubeMap.bind(textureUnit);
  }
  else{
    cubeMap.bind(textureUnit);
  }
}


