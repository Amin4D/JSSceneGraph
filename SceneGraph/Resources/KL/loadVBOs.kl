
//
// Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
//

operator loadIndicesVBO(
  io Integer indices[],
  io Size indicesCount,
  io Integer bufferID
) {
//  report("genAndLoadIndicesVBOs indices.size():" + indices.size() + "  bufferID:" + bufferID );
  if (bufferID != 0 && indices.size() != indicesCount) {
    var Size buffers[];
    buffers.push(Size(bufferID));
    glDeleteBuffers(1, buffers);
    bufferID = 0;
  }
  
  if (indices.size() > 0) {
    if (bufferID == 0) {
      var Size buffers[];
      buffers.push(Size(0));
      glGenBuffers(1, buffers);
      bufferID = Integer(buffers[0]);
    }
    // Now fill the buffer with the data
    glBindBuffer(GL_ARRAY_BUFFER, bufferID);
    glBufferData(GL_ARRAY_BUFFER, indices.dataSize(), indices.data(), GL_STATIC_DRAW);
    glBindBuffer(GL_ARRAY_BUFFER, 0);
  }
  
  indicesCount = indices.size();
}
